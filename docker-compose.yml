# T-Pot (Standard)
# For docker-compose ...
version: '3.4'

services:
# Suricata service
  suricata:
    container_name: service-suricata
    build:
      context: ./docker_contexts/suricata
      dockerfile: Dockerfile
    restart: unless-stopped
    network_mode: "host"
    environment:
      - LISTEN_IFACE=eth0
    cap_add:
      - NET_ADMIN
      - NET_RAW
      - SYS_NICE
    volumes:
      - volume_log:/var/log/suricata
    labels:
      - traefik.enable=false

  traefik:
    container_name: service-traefik
    image: traefik:v1.7.6-alpine  # The official Traefik docker image
    restart: unless-stopped
    command: --docker  # Enables the web UI and tells Traefik to listen to docker
    ports:
      - 80:80
      - 443:443
      - 8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - $PWD/container_mounts/traefik/traefik.toml:/traefik.toml
      - $PWD/container_mounts/traefik/acme.json:/acme.json
    networks:
      - network_frontend
      - network_proxy
    labels:
      - traefik.enable=true
      - traefik.port=8080
      - traefik.docker.network=network_proxy
      - traefik.frontend.rule=Host:traefik.docker.localhost

  portainer:
    container_name: service-portainer
    image: portainer/portainer:latest
    restart: unless-stopped
    command: --host=unix:///var/run/docker.sock
    volumes:
      - portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - network_proxy
    ports:
      - 9000
    labels:
      - traefik.enable=true
      - traefik.port=9000
      - traefik.docker.network=network_proxy
      - traefik.frontend.rule=Host:portainer.docker.localhost

  cron:
    container_name: service-cron
    build:
      context: ./docker_contexts/crontab-ui
      dockerfile: Dockerfile
    restart: unless-stopped
    networks:
      - network_proxy
    ports:
      - 8000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - traefik.enable=true
      - traefik.port=8000
      - traefik.docker.network=network_proxy
      - traefik.frontend.rule=Host:cron.docker.localhost

  kibana:
    container_name: service-kibana
    image: blacktop/kibana:6.5.4
    restart: unless-stopped
    ports:
      - 5601
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    networks:
      - network_proxy
      - network_db
    depends_on:
      - elasticsearch
    links:
      - elasticsearch
    labels:
      - traefik.enable=true
      - traefik.port=5601
      - traefik.docker.network=network_proxy
      - traefik.frontend.rule=Host:kibana.docker.localhost

  logstash:
    container_name: service-logstash
    image: blacktop/logstash:6.5.4
    restart: unless-stopped
    command: -f /etc/logstash/conf.d/
    volumes:
      - $PWD/container_mounts/logstash/:/etc/logstash/conf.d
    networks:
      - network_frontend
      - network_proxy
      - network_db
    depends_on:
      - elasticsearch
    links:
      - elasticsearch
    ports:
      - 5044:5044
    labels:
      - traefik.enable=false

  elasticsearch:
    container_name: service-elasticsearch
    image: blacktop/elasticsearch:6.5.4
    restart: unless-stopped
    networks:
      - network_db
    ports:
      - 9200
      - 9300
    environment:
      - discovery.type=single-node
    volumes:
      - elastic_data:/usr/share/elasticsearch/data:rw
    labels:
      - traefik.enable=false

networks:
  network_proxy:
    external: true
  network_frontend:
    external: true
  network_db:
    external: true

volumes:
  portainer_data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '$PWD/storage/portainer'

  elastic_data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '$PWD/storage/elasticsearch'

  volume_log:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '$PWD/storage/eve'
